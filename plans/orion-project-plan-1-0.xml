<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!--  Use this to test local rendering in firefox. Comment out this line once this plan is linked to portal data. -->
<?xml-stylesheet type="text/xsl" href="project-plan-render.xsl"?>
<!-- <?xml-stylesheet type="text/xsl" href="http://www.eclipse.org/projects/project-plan.xsl"?> -->

<p:plan
  plan-format="1.0"
  xmlns:p="http://www.eclipse.org/project/plan" xmlns="http://www.w3.org/1999/xhtml"
  name="Orion Project">

<p:release projectid="eclipse.orion" version="1.0"/>

<!-- ============================================== -->

<p:introduction>
<div>
<p>
Last revised 10:00 ET July 17, 2012.
</p>
<p><i>Please send comments about this plan to the</i> <a href="mailto:orion-dev@eclipse.org">orion-dev@eclipse.org</a> <i>developer
  mailing list.</i>

</p>
<p>This document lays out the feature and API set for the next feature release
  of the Orion project after 0.5, designated release 1.0. 
</p>

<p>Plans do not materialize out of nowhere, nor are they entirely static. To
  ensure the planning process is transparent and open to the entire Eclipse community,
  we (the Orion project leadership) post plans in an embryonic form and revise them
  throughout the release cycle. </p>
<p>The first part of the plan deals with the important matters of release deliverables,
  release milestones, target operating environments, and release-to-release compatibility.
  These are all things that need to be clear for any release, even if no features
  were to change. </p>
<p>The remainder of the plan consists of plan items for components of the Orion project.
  Each plan item covers a feature or API that is to be added to the Orion project deliverables, 
  or some aspect of the Orion project that is to be improved. Each plan item has its own entry
  in the Eclipse bugzilla database, with a title and a concise summary (usually
  a single paragraph) that explains the work item at a suitably high enough level
  so that everyone can readily understand what the work item is without having
  to understand the nitty-gritty detail. </p>
<p>Not all plan items represent the same amount of work; some may be quite large,
  others, quite small. Some plan items may involve work that is localized to
  a single component; others may involve coordinated changes to several components;
  other may pervade the entire project. Although some plan items are for work that
  is more pressing than others, the plan items appear in no particular order. </p>
<p>With the previous release as the starting point, this is the plan for how
  we will enhance and improve it. Fixing bugs, improving test coverage, documentation,
  examples, performance tuning, usability, etc. are considered routine ongoing
  maintenance activities and are not included in this plan unless they would
  also involve a significant change to the API or feature set, or involve a significant
  amount of work. The intent of the plan is to account for all interesting feature
  work. </p>
<p>The current status of each plan item is noted: </p>
<ul>

  <li><b>Committed</b> plan item - A committed plan item is one that we have
    decided to address for the release.</li>
  <li><b>Proposed</b> plan item - A proposed plan item is one that we are considering
    addressing for the release. Although we are actively investigating it, we
    are not yet in a position to commit to it, or to say that we won't be able
    to address it. After due consideration, a proposal will either be committed
    or deferred.</li>
  <li><b>Deferred</b> plan item - A reasonable proposal that will not make it
    in to this release for some reason is marked as deferred with a brief note
    as to why it was deferred. Deferred plan items may resurface as committed
    plan items at a later point.</li>
</ul>

</div>
</p:introduction>

<!-- ============================================== -->

<p:release_deliverables>
<div>

<p>The release deliverables have the same form as previous releases, namely: </p>
<ul>
  <li>Source code release for all Orion project deliverables, available as
    versions tagged &quot;R1_0&quot; in the Orion project <a href="http://wiki.eclipse.org/Orion/Getting_the_source">Git
    repositories</a>.</li>

  <li>Packaged Orion server download for Windows, Mac, and Linux</li>
  <li>Hosted Orion server on http://orionhub.org</li>
</ul>
</div>
</p:release_deliverables>

<!-- ============================================== -->

<p:release_milestones>

<p:preamble><p>      
  Release milestones will be occurring at roughly 6 week intervals, followed by a short
  end-game consisting of three release candidates.</p>

</p:preamble>
<p:milestone date="08/10/2012" milestone="M1"><div>1.0M1</div></p:milestone>
<p:milestone date="09/21/2012" milestone="M2"><div>1.0M2</div></p:milestone>
<p:milestone date="10/05/2012" milestone="RC1"><div>1.0RC1</div></p:milestone>
<p:milestone date="10/12/2012" milestone="RC2"><div>1.0RC2</div></p:milestone>
<p:milestone date="10/19/2012" milestone="RC3"><div>1.0RC3</div></p:milestone>
<p:postamble>
<div>
<p>A more detailed, milestone-level plan for the Orion project can be found 
  on the <a href="http://wiki.eclipse.org/Orion/Milestone_Plan">Orion Milestone Plan</a>
  wiki page.</p>

<p>Our target is to complete 1.0 in October 2012, in concert with the <a href="http://www.eclipsecon.org/europe2012/">EclipseCon Europe</a>.
  All release deliverables will be available for download as soon as the release has been
  tested and validated in the target operating configurations listed below.
 </p>
</div>
</p:postamble>

</p:release_milestones>

<!-- ============================================== -->

<p:target_environments>

<div>
<p>In order to remain current, each Orion project release targets reasonably current
  operating environments. We focus our testing on a handful of
  popular combinations of operating systems, Web browsers, and Java platforms; these are our <em>reference
  platforms</em>. Orion undoubtedly runs fine in many operating environments
  beyond the reference platforms we test. However, since we do not systematically test
  them we cannot vouch for them. Problems encountered when running Orion on a
  non-reference platform that cannot be recreated on any reference platform will
  be given lower priority than problems with running Orion on a reference platform.
 </p>
 <p>Orion has two broad classes of target environments:</p>

 <ol> 
 <li><b>Client target environments</b>  Indicates environments supported for
 end users of Orion-based web applications.
 </li>
 <li><b>Server target environments</b>  Indicates requirements for the platform
 where the Orion server is installed.
 </li>
 </ol>
<p>Most of the Orion client code is built on HTML5, CSS3, and ECMAScript 5 (JavaScript).
 As such, the chief dependence is on a web browser that supplies rendering and interpretation
 of these languages. In general, Orion requires the most recent major release of the
 major browsers it supports. Due to the fast pace of development in the browser world,
 supporting older browser versions is not a priority for Orion at this early stage of its development.
</p>
<p>Orion 1.0 is tested and validated on the following reference <i>client target environments</i>:</p>

<style type="text/css">
	table.platforms {
		border-width: 1px;
		border-spacing: 0px;
		border-style: solid;
		border-collapse: separate;
	}
	table.platforms th {
		border-width: 1px;
		padding: 3px;
		border-style: inset;
		border-color: black;
		background-color: #B9A9FF;
	}
	table.platforms td {
		border-width: 1px 1px 1px 1px;
		padding: 3px 3px 3px 3px;
		border-style: inset inset inset inset;
		border-color: gray gray gray gray;
	}
	table.platforms tr.c0 td {
		background-color: #FDFDFD;
	}
	table.platforms tr.c1 td {
		background-color: #F4EEFF;
	}
</style>
<center>
	<table class="platforms">
		<tr>
			<th>Operating System</th>
			<th>Version</th>
			<th>Browsers</th>

		</tr>
		<!-- ************ WINDOWS ************** -->
		<tr class="c0">
			<td rowspan="3">Windows</td>
			<td rowspan="3">7</td>
			<td rowspan="1">Chrome</td>
		</tr>

		<tr class = "c0">
			<td rowspan="1">Firefox</td>
		</tr>
		<tr class = "c0">
			<td rowspan="1">Internet Explorer 9.0</td>
		</tr>
		<!-- ************ RHEL ************** -->
		<tr class="c1">

			<td rowspan="2">Red Hat Enterprise Linux</td>
			<td rowspan="2">6</td>
			<td rowspan="1">Chrome</td>
		</tr>
		<tr class = "c1">
			<td rowspan="1">Firefox</td>
		</tr>

		<!-- ************ Mac ************** -->
		<tr class="c0">
			<td rowspan="1">Apple Mac OS X</td>
			<td rowspan="1">10.7.4</td>
			<td rowspan="1">Safari 5.1.7</td>
		</tr>
	</table>

 </center>
<p>Most of the Orion server code is &quot;pure&quot; Java code and has no direct dependence
  on the underlying operating system. The chief dependence is therefore on the
  Java Platform itself. Portions are targeted to specific classes of operating
  environments, requiring their source code to only reference facilities available
  in particular class libraries (e.g. Java SE 5, Java SE 6, etc). In general, the 1.0 
  release of the Orion server is developed and tested on Java SE 6.</p>
<p>The Orion 1.0 server is tested and validated on the following reference <i>server target environments</i>:</p>
<center>
	<table class="platforms">
		<tr>
			<th>Operating System</th>

			<th>Version</th>
			<th>Hardware</th>
			<th>JRE</th>
		</tr>
		<!-- ************ WINDOWS ************** -->
		<tr class="c0">
			<td rowspan="2">Windows</td>

			<td rowspan="2">7</td>
			<td rowspan="1">x86 32-bit</td>
			<td rowspan="2">Oracle Java 6 Update 29<br/>
				IBM Java 6 SR9 FP2
			</td>
		</tr>
		<tr class="c0">
			<td rowspan="1">x86 64-bit</td>

		</tr>
		<!-- ************ RHEL ************** -->
		<tr class="c1">
			<td rowspan="2">Red Hat Enterprise Linux</td>
			<td rowspan="2">6</td>
			<td rowspan="1">x86 32-bit</td>
			<td rowspan="2">Oracle Java 6 Update 29<br/>

				IBM Java 6 SR9 FP2
			</td>
		</tr>
		<tr class="c1">
			<td rowspan="1">x86 64-bit</td>
		</tr>
		<!-- ************ Mac ************** -->
		<tr class="c0">
			<td rowspan="1">Apple Mac OS X</td>

			<td rowspan="1">10.7</td>
			<td rowspan="1">Universal 64-bit</td>
			<td rowspan="1">Java for Mac OS X 10.7 Update 1</td>
		</tr>
	</table>
 </center>

<p>As stated above, <i>we expect that Orion works fine on other current
  Java VM and OS versions but we cannot flag these as reference platforms without
  significant community support for testing them.</i></p>

</div>

<p:internationalization>
<p>Orion supports internationalization through plugins which provide message catalogs of translations.
There is an NLS Plugin to aid developers in creating an initial message catalog.  In addition, the
folders, files and contents of the Orion Server have been verified to work with DBCS characters and the
editor itself also supports BIDI.  Orion as provided via Eclipse downloads will only provide English
strings in the 1.0 release.</p>
</p:internationalization>

</p:target_environments>
 
<!-- ============================================== -->

<p:compatibility_with_previous_releases>
<div>

<h3>Compatibility of Release 1.0 with 0.5</h3>
<p>Orion 1.0 guarantees no formal compatibility with Orion 0.5. While some plugins
designed for Orion 0.5 may continue to function when installed in Orion 1.0, there may
be changes to APIs and library functions used by the plugin that have changed in incompatible
ways that prevent it from installing or operating properly.</p>

</div>
</p:compatibility_with_previous_releases>
  
<!-- ============================================== -->

<p:themes_and_priorities>

<p:preamble>
<div>
<p>The plan items listed below were defined according to contributor requirements and
community feedback. Each plan item covers a feature or API that is
  to be added to the Orion project deliverables, or some aspect of the Orion project that is
  to be improved. Each plan item has its own entry in the Eclipse bugzilla database, with a title
  and a concise summary (usually a single paragraph) that explains the work item at a suitably
  high enough level so that everyone can readily understand what the work item entails.</p>
<p>Not all plan items represent the same amount of work; some may be quite
  large, others, quite small. Although some plan items are for work that is 
  more pressing than others, the plan items appear in no particular order.
  See the corresponding bugzilla items for up-to-date status information on
  ongoing work and planned delivery milestones.</p>
<p>The current status of each plan item is noted:</p>
<ul>
  <li><b>Committed</b> plan item - A committed plan item is one that we have
    decided to address for the release. In bugzilla, this is reflected by
    having a concrete target milestone assigned.</li>

  <li><b>Proposed</b> plan item - A proposed plan item is one that we are
    considering addressing for the release. Although we are actively
    investigating it, we are not yet in a position to commit to it, or to say
    that we won't be able to address it. After due consideration, a proposal
    will either be committed or deferred. In bugzilla, such items are reflected
    by having a target milestone "1.0" or "---" assigned.</li>
  <li><b>Deferred</b> plan item - A reasonable proposal that will not make it in
    to this release for some reason is marked as deferred with a brief note as
    to why it was deferred. Deferred plan items may resurface as committed plan
    items at a later point. In bugzilla, such items are reflected by having
    a target milestone "---" assigned.</li>
</ul>
</div>
</p:preamble>

<!-- ============================================== -->

<p:theme name="Language Tooling">

<p:description>
<p>
In Orion 0.5 several plugins utilized the Esprima parsing framework.  This framework is included now as part
of Orion however more recent versions are required to finalize on committing a more complete error tolerant version.
There may be investigation on server side assisted content assist but this will not be made a committed item
for 1.0.
</p>
</p:description>

<p:proposed>
  <p><i>None at this time.</i></p>
</p:proposed>

<p:committed>
	<ul>
	<li>
		<strong>Improved error recovery in JavaScript Parsing</strong>
		Leverage work done to make the Esprima parser capable of error recovery. Waiting on a newer version of Esprima before this code can be contributed into Orion [Client]
	</li>
	</ul>
</p:committed>

<p:deferred>
  <p><i>None at this time.</i></p>
</p:deferred>

</p:theme>

<!-- ============================================== -->

<p:theme name="Platform">
<p:description>
<p>This theme includes currency with the existing 3rd party libraries used and providing existing and new core features that
  are modular.
</p>
</p:description>

<p:proposed>
<ul>
<li>
	<strong>Improved specification for Plugin Model</strong>
	Plugin Model and Architecture for describing, identifying, discovering and installing.
	Support plugin catalogs via a feed as well as page redirection. Finalize the plugin
	lifecycle and include the capability to disable a plugin without uninstalling it.
	[Client]
</li>
<li>
	<strong>Plugin license agreements</strong>
	Provide the ability to display and acknowledge plugin licenses [Client]
</li>
<li>
	<strong>Plugin Packages</strong>
	Provide a means to install a group of plugins together[Client]
</li>
<li>
	<strong>Finalize i18N support</strong>
	Also provide examples on how to integrate with new plugins and how to use the NLS tool [Client]
</li>
<li>
	<strong>Word Wrap support in Editor</strong>
	This is a requirement for many projects [Client]
</li>
<li>
	<strong>Variable line hight in editor</strong>
	This is desirable for many usecases [Client]
</li>
<li>
	<strong>Persona login capabilities</strong>
	Provide the capability to login via a Persona ID [Client][Server]
</li>
<li>
	<strong>Offline modes</strong>
	Investigate solutions to migrating to an offline mode to continue development while disconnected [Client]
</li>
<li>
	<strong>Syncronize settings</strong>
	Syncronize local storage and user preferences [Client][Server]
</li>
<li>
	<strong>REST API for Git Command Line</strong>
	Add Git support to the Orion Console. In order to do this Orion needs REST APIs for Git.[Client][Git][Server]
</li>
</ul>
</p:proposed>

<p:committed>
<ul>
<li>
	<strong>Default Crawling Search for File Implementations</strong>
	Provide a default crawling search engine for new file system implementations.  At a minimum supporting files for Ctrl-F [Client]
</li>
<li>
	<strong>Improve Workspace naming conventions</strong>
	Currently the displayed names look like garbled text vs. User IDs [Client][Server]
</li>
</ul>
  <p><i>None at this time.</i></p>
</p:committed>

<p:deferred>
  <p><i>None at this time.</i></p>
</p:deferred>

</p:theme>

<!-- ============================================== -->

<p:theme name="User Experience">
<p:description>
<p>In 0.5 the Orion UX was a significant focus.  Alignment across pages on selection models, layout, etc is almost complete.
This will be finalized before 1.0 ships. In addition the team will look at how theming can be accomplished.
</p>
</p:description>

<p:proposed>
<ul>
<li>
	<strong>Vector Based font for Icons</strong>
	Create and replace existing bitmap fonts with a Vector based design.  This improved rendering on newer high resolution displays.[Client]
</li>
<li>
	<strong>Move plugin service display to console</strong>
	Move service descriptions from plugins page to the console.  For developers to have a look at the services
	for a particular plugin.  The plugins page is more for end users.[Client]
</li>
<li>
	<strong>Improved Git Squash and Pull support</strong>
	Support for Git squash and better pull support for fixes[Client][Git][Server]
</li>
<li>
	<strong>Analyze and improve Git page performance</strong>[Client][Git][Server]
</li>
<li>
	<strong>Finalize on Orion UI Consistency</strong>
	Finalize on consistency of page layout, section, selection throughout default Orion pages.[Client]
</li>
<li>
	<strong>Local credential caching</strong>
	Provide credential caching for current page to aid in Git authentication [Client]
</li>
<li>
	<strong>Navigator in Editor outline view</strong>
	Investigate a navigator within the outline view for the Editor [Client]
</li>
</ul>

  <p><i>None at this time.</i></p>
</p:proposed>

<p:committed>
<ul>
<li>
	<strong>Universal Client side diff</strong>
	Provide universal diff for any two files using client side code only [Client]
</li>
<li>
	<strong>Improved Admin page</strong>
	The current Admin page takes too long to load [Client][Server]
</li>
<li>
	<strong>Add Themeing Capabilities</strong>
	Investigate streamlining our style sheets and potentially provide styling capabilities through the use of <i>less</i>.
	Also provide default styles and a style picker to allow the use to control the look of certain Orion elements.[Client]
</li>
</ul>
</p:committed>

<p:deferred>
  <p><i>None at this time.</i></p>
</p:deferred>

</p:theme>

<p:theme name="Infrastructure">

<p:description>
<p>This theme describes build or infrastructure issues not really surfaced in the client but essential to a good platform.
</p>
</p:description>

<p:committed>
<ul>
<li>
	<strong>Dynamic System messages</strong>
	Provide an easy method for displaying system messages or information on the server without requiring a server restart. [Client][Server]
</li>
</ul>
</p:committed>
<p:proposed>
<ul>
<li>
	<strong>Improve the test coverage and capabilities.</strong>
	Investigate JavaScript code coverage tools to see if there
	are ways to report on the completeness of the current testing.
	[Releng]
</li>
<li>
	<strong>Finalize GetPlugins location</strong>
	The Github location for the current plugins is convenient but doesn't show
	association with OrionHub or Orion in general.  Should the plugins continue to exist there or moved to a location
	with a deeper association to Orion.
</li>
<li>
	<strong>JSLint Clean</strong>
	Go through JavaScript code and ensure all files are JSLint clean.
	Many files were authored in Eclipse which does not have the same JSLint capabilities as the Orion editor.
</li>
<li>
	<strong>Clean up unused code and files</strong>
	Finalize directory structure for 1.0 shape and remove any unused files and code fragments.
</li>
<li>
	<strong>Finalize User Accounts</strong>
	Finalize on user account information required and authentication methods.
	Provide a backup method of retrieving old OrionHub accounts and data before purging for a 1.0 release [Client][Server]
</li>
</ul>
</p:proposed>

<p:deferred>
<ul>
<li>
	<strong>Source Maps for Debugging</strong>
	Source maps debug support for our build.  Improves debugability for optimized pages.
</li>
</ul>
</p:deferred>

</p:theme>

    
</p:themes_and_priorities>

<!-- ============================================== -->
</p:plan>
