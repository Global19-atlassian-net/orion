<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!--  Use this to test local rendering in firefox. Comment out this line once this plan is linked to portal data. -->
<?xml-stylesheet type="text/xsl" href="project-plan-render.xsl"?>
<!-- <?xml-stylesheet type="text/xsl" href="http://www.eclipse.org/projects/project-plan.xsl"?> -->

<p:plan
  plan-format="1.0"
  xmlns:p="http://www.eclipse.org/project/plan" xmlns="http://www.w3.org/1999/xhtml"
  name="Orion Project">

<p:release projectid="eclipse.orion" version="0.5"/>

<!-- ============================================== -->

<p:introduction>
<div>
<p>
Last revised 13:00 ET June 21, 2012.
</p>
<p><i>Please send comments about this plan to the</i> <a href="mailto:orion-dev@eclipse.org">orion-dev@eclipse.org</a> <i>developer
  mailing list.</i>

</p>
<p>This document lays out the feature and API set for the next feature release
  of the Orion project after 0.4, designated release 0.5. 
</p>

<p>Plans do not materialize out of nowhere, nor are they entirely static. To
  ensure the planning process is transparent and open to the entire Eclipse community,
  we (the Orion project leadership) post plans in an embryonic form and revise them
  throughout the release cycle. </p>
<p>The first part of the plan deals with the important matters of release deliverables,
  release milestones, target operating environments, and release-to-release compatibility.
  These are all things that need to be clear for any release, even if no features
  were to change. </p>
<p>The remainder of the plan consists of plan items for components of the Orion project.
  Each plan item covers a feature or API that is to be added to the Orion project deliverables, 
  or some aspect of the Orion project that is to be improved. Each plan item has its own entry
  in the Eclipse bugzilla database, with a title and a concise summary (usually
  a single paragraph) that explains the work item at a suitably high enough level
  so that everyone can readily understand what the work item is without having
  to understand the nitty-gritty detail. </p>
<p>Not all plan items represent the same amount of work; some may be quite large,
  others, quite small. Some plan items may involve work that is localized to
  a single component; others may involve coordinated changes to several components;
  other may pervade the entire project. Although some plan items are for work that
  is more pressing than others, the plan items appear in no particular order. </p>
<p>With the previous release as the starting point, this is the plan for how
  we will enhance and improve it. Fixing bugs, improving test coverage, documentation,
  examples, performance tuning, usability, etc. are considered routine ongoing
  maintenance activities and are not included in this plan unless they would
  also involve a significant change to the API or feature set, or involve a significant
  amount of work. The intent of the plan is to account for all interesting feature
  work. </p>
<p>The current status of each plan item is noted: </p>
<ul>

  <li><b>Committed</b> plan item - A committed plan item is one that we have
    decided to address for the release.</li>
  <li><b>Proposed</b> plan item - A proposed plan item is one that we are considering
    addressing for the release. Although we are actively investigating it, we
    are not yet in a position to commit to it, or to say that we won't be able
    to address it. After due consideration, a proposal will either be committed
    or deferred.</li>
  <li><b>Deferred</b> plan item - A reasonable proposal that will not make it
    in to this release for some reason is marked as deferred with a brief note
    as to why it was deferred. Deferred plan items may resurface as committed
    plan items at a later point.</li>
</ul>

</div>
</p:introduction>

<!-- ============================================== -->

<p:release_deliverables>
<div>

<p>The release deliverables have the same form as previous releases, namely: </p>
<ul>
  <li>Source code release for all Orion project deliverables, available as
    versions tagged &quot;R0_5&quot; in the Orion project <a href="http://wiki.eclipse.org/Orion/Getting_the_source">Git
    repositories</a>.</li>

  <li>Packaged Orion server download for Windows, Mac, and Linux</li>
  <li>Hosted Orion beta server on http://orionhub.org</li>
</ul>
</div>
</p:release_deliverables>

<!-- ============================================== -->

<p:release_milestones>

<p:preamble><p>      
  Release milestones will be occurring at roughly 6 week intervals, followed by a short
  end-game consisting of three release candidates.</p>

</p:preamble>
<p:milestone date="04/13/2012" milestone="M1"><div>0.5M1</div></p:milestone>
<p:milestone date="05/25/2012" milestone="M2"><div>0.5M2</div></p:milestone>
<p:milestone date="06/08/2012" milestone="RC1"><div>0.5RC1</div></p:milestone>
<p:milestone date="06/15/2012" milestone="RC2"><div>0.5RC2</div></p:milestone>
<p:milestone date="06/22/2012" milestone="RC3"><div>0.5RC3</div></p:milestone>
<p:postamble>
<div>
<p>A more detailed, milestone-level plan for the Orion project can be found 
  on the <a href="http://wiki.eclipse.org/Orion/Milestone_Plan">Orion Milestone Plan</a>
  wiki page.</p>

<p>Our target is to complete 0.5 in late June 2012, in concert with the Juno announcements.
  All release deliverables will be available for download as soon as the release has been
  tested and validated in the target operating configurations listed below.
 </p>
</div>
</p:postamble>

</p:release_milestones>

<!-- ============================================== -->

<p:target_environments>

<div>
<p>In order to remain current, each Orion project release targets reasonably current
  operating environments. We focus our testing on a handful of
  popular combinations of operating systems, Web browsers, and Java platforms; these are our <em>reference
  platforms</em>. Orion undoubtedly runs fine in many operating environments
  beyond the reference platforms we test. However, since we do not systematically test
  them we cannot vouch for them. Problems encountered when running Orion on a
  non-reference platform that cannot be recreated on any reference platform will
  be given lower priority than problems with running Orion on a reference platform.
 </p>
 <p>Orion has two broad classes of target environments:</p>

 <ol> 
 <li><b>Client target environments</b>  Indicates environments supported for
 end users of Orion-based web applications.
 </li>
 <li><b>Server target environments</b>  Indicates requirements for the platform
 where the Orion server is installed.
 </li>
 </ol>
<p>Most of the Orion client code is built on HTML5, CSS3, and ECMAScript 5 (JavaScript).
 As such, the chief dependence is on a web browser that supplies rendering and interpretation
 of these languages. In general, Orion requires the most recent major release of the
 major browsers it supports. Due to the fast pace of development in the browser world,
 supporting older browser versions is not a priority for Orion at this early stage of its development.
</p>
<p>Orion 0.5 is tested and validated on the following reference <i>client target environments</i>:</p>

<style type="text/css">
	table.platforms {
		border-width: 1px;
		border-spacing: 0px;
		border-style: solid;
		border-collapse: separate;
	}
	table.platforms th {
		border-width: 1px;
		padding: 3px;
		border-style: inset;
		border-color: black;
		background-color: #B9A9FF;
	}
	table.platforms td {
		border-width: 1px 1px 1px 1px;
		padding: 3px 3px 3px 3px;
		border-style: inset inset inset inset;
		border-color: gray gray gray gray;
	}
	table.platforms tr.c0 td {
		background-color: #FDFDFD;
	}
	table.platforms tr.c1 td {
		background-color: #F4EEFF;
	}
</style>
<center>
	<table class="platforms">
		<tr>
			<th>Operating System</th>
			<th>Version</th>
			<th>Browsers</th>

		</tr>
		<!-- ************ WINDOWS ************** -->
		<tr class="c0">
			<td rowspan="3">Windows</td>
			<td rowspan="3">7</td>
			<td rowspan="1">Chrome</td>
		</tr>

		<tr class = "c0">
			<td rowspan="1">Firefox</td>
		</tr>
		<tr class = "c0">
			<td rowspan="1">Internet Explorer 9.0</td>
		</tr>
		<!-- ************ RHEL ************** -->
		<tr class="c1">

			<td rowspan="2">Red Hat Enterprise Linux</td>
			<td rowspan="2">6</td>
			<td rowspan="1">Chrome</td>
		</tr>
		<tr class = "c1">
			<td rowspan="1">Firefox</td>
		</tr>

		<!-- ************ Mac ************** -->
		<tr class="c0">
			<td rowspan="1">Apple Mac OS X</td>
			<td rowspan="1">10.7.2</td>
			<td rowspan="1">Safari 5.1.1</td>
		</tr>
	</table>

 </center>
<p>Most of the Orion server code is &quot;pure&quot; Java code and has no direct dependence
  on the underlying operating system. The chief dependence is therefore on the
  Java Platform itself. Portions are targeted to specific classes of operating
  environments, requiring their source code to only reference facilities available
  in particular class libraries (e.g. Java SE 5, Java SE 6, etc). In general, the 0.5 
  release of the Orion server is developed and tested on Java SE 6.</p>
<p>The Orion 0.5 server is tested and validated on the following reference <i>server target environments</i>:</p>
<center>
	<table class="platforms">
		<tr>
			<th>Operating System</th>

			<th>Version</th>
			<th>Hardware</th>
			<th>JRE</th>
		</tr>
		<!-- ************ WINDOWS ************** -->
		<tr class="c0">
			<td rowspan="2">Windows</td>

			<td rowspan="2">7</td>
			<td rowspan="1">x86 32-bit</td>
			<td rowspan="2">Oracle Java 6 Update 29<br/>
				IBM Java 6 SR9 FP2
			</td>
		</tr>
		<tr class="c0">
			<td rowspan="1">x86 64-bit</td>

		</tr>
		<!-- ************ RHEL ************** -->
		<tr class="c1">
			<td rowspan="2">Red Hat Enterprise Linux</td>
			<td rowspan="2">6</td>
			<td rowspan="1">x86 32-bit</td>
			<td rowspan="2">Oracle Java 6 Update 29<br/>

				IBM Java 6 SR9 FP2
			</td>
		</tr>
		<tr class="c1">
			<td rowspan="1">x86 64-bit</td>
		</tr>
		<!-- ************ Mac ************** -->
		<tr class="c0">
			<td rowspan="1">Apple Mac OS X</td>

			<td rowspan="1">10.7</td>
			<td rowspan="1">Universal 64-bit</td>
			<td rowspan="1">Java for Mac OS X 10.7 Update 1</td>
		</tr>
	</table>
 </center>

<p>As stated above, <i>we expect that Orion works fine on other current
  Java VM and OS versions but we cannot flag these as reference platforms without
  significant community support for testing them.</i></p>

</div>

<p:internationalization>
<p>Orion cannot currently be used as the basis for internationalized products. One of the
  plan items for the 0.5 release is to continue the work into finalizing an internationalization
  framework and applying it to the user interface. Only English strings are in plan to be provided.</p>
</p:internationalization>

</p:target_environments>
 
<!-- ============================================== -->

<p:compatibility_with_previous_releases>
<div>

<h3>Compatibility of Release 0.5 with 0.4</h3>
<p>Orion 0.5 offers no formal compatibility with Orion 0.4. While some plugins
designed for Orion 0.4 may continue to function when installed in Orion 0.5, there may
be changes to APIs and library functions used by the plugin that have changed in incompatible
ways that prevent it from installing or operating properly.</p>

</div>
</p:compatibility_with_previous_releases>
  
<!-- ============================================== -->

<p:themes_and_priorities>

<p:preamble>
<div>
<p>The plan items listed below were defined according to contributor requirements and
community feedback. Each plan item covers a feature or API that is
  to be added to the Orion project deliverables, or some aspect of the Orion project that is
  to be improved. Each plan item has its own entry in the Eclipse bugzilla database, with a title
  and a concise summary (usually a single paragraph) that explains the work item at a suitably
  high enough level so that everyone can readily understand what the work item entails.</p>
<p>Not all plan items represent the same amount of work; some may be quite
  large, others, quite small. Although some plan items are for work that is 
  more pressing than others, the plan items appear in no particular order.
  See the corresponding bugzilla items for up-to-date status information on
  ongoing work and planned delivery milestones.</p>
<p>The current status of each plan item is noted:</p>
<ul>
  <li><b>Committed</b> plan item - A committed plan item is one that we have
    decided to address for the release. In bugzilla, this is reflected by
    having a concrete target milestone assigned.</li>

  <li><b>Proposed</b> plan item - A proposed plan item is one that we are
    considering addressing for the release. Although we are actively
    investigating it, we are not yet in a position to commit to it, or to say
    that we won't be able to address it. After due consideration, a proposal
    will either be committed or deferred. In bugzilla, such items are reflected
    by having a target milestone "0.3" or "---" assigned.</li>
  <li><b>Deferred</b> plan item - A reasonable proposal that will not make it in
    to this release for some reason is marked as deferred with a brief note as
    to why it was deferred. Deferred plan items may resurface as committed plan
    items at a later point. In bugzilla, such items are reflected by having
    a target milestone "---" assigned.</li>
</ul>
</div>
</p:preamble>

<!-- ============================================== -->

<p:theme name="Language Tooling">

<p:description>
<p>
 Orion 0.4 saw an increase in language tooling through the use of external components such as CodeMirror.
 Work has started on integrating Esprima into Orion for both syntax highlighting, outline views and potentially syntax
 checking.  In addition through investigations on workflows, deeper support for Python, Ruby and PHP may be considered.
 The debug platform progressed in 0.4 and work will continue alongside the console investigations.  Since work on Globalization
 has begun within Orion, it will be a focus to provide tooling to assist with JavaScript localization.
</p>
</p:description>

<p:proposed>
  <p><i>None at this time.</i></p>
</p:proposed>

<p:committed>
<ul>
<li>
	<strong>Esprima a component within Orion.</strong>
	This is awaiting the results of an Eclipse Foundation CQ.  Use Esprima for JavaScript
	tooling such as syntax highlighting, outline, content assist and syntax checking where possible.
	[Client]
</li>
</ul>
</p:committed>

<p:deferred>
<ul>
<li>
	<strong>Deeper integration between Orion editors and debug platform.</strong>
	Provide a link between setting and clearing breakpoints within the Orion editor and transitioning from debugger to editor.
	[Client]
</li>
<li>
	<strong>CodeMirror a component within Orion.</strong>
	This is awaiting the results of an Eclipse Foundation CQ. Used for syntax highlighting numerous languages.
	<i>This has proven difficult to get a CQ for</i>
	[Client]
</li>
<li>
	<strong>Need a JavaScript parser that can handle errors.</strong>
	The current parser cannot continue after encountering errors. This limits the flexibility on
	what can be done in the editor while the user is continually editing code.
	Leverage work done to make the Esprima parser capable of error recovery.
	<i>Waiting on a newer version of Esprima before this code can be contributed into Orion</i>
	[Client]
</li>
</ul>
</p:deferred>

</p:theme>

<!-- ============================================== -->

<p:theme name="Platform">
<p:description>
<p>This theme includes currency with the existing 3rd party libraries used and providing existing and new core features that
  are modular.
</p>
</p:description>

<p:proposed>
<ul>
</ul>

</p:proposed>

<p:committed>
<ul>
<li>
	<strong>Authentication integration with service registry</strong>
	Deferred from 0.4.
	[Client]
</li>
<li>
	<strong>Cross Site and Cross Application visual elements</strong>
	Work on the method to both consume visual components within the Orion look and 
	feel and also how to provide Orion trim plugins to external appliations to maintain 
	consistent functionality across sites. <i>This was worked on but can use more work</i>
	[Client]
</li>
<li>
	<strong>Command Line Console</strong>
	Investigate adding the GCLI command line framework, and using it for debug,
	git, and deployment commands.
	[Client]
</li>
<li>
	<strong>Bidi support in Editor</strong>
	[Client]
</li>
<li>
	<strong>Update our 3rd party libraries including DoJo, JSDoc and Solr</strong>
	[Client]
</li>
<li>
	<strong>URI Templates</strong>
	Finalize the API, use consistently within Orion pages and document how to integrate using URI Templates. 
	[Client]
</li>
<li>
	<strong>Localization support</strong>
	Continue the localization of the Orion components.  Utilize the work done within the Editor toward
	other Orion areas.  Ensure there is a solution for localizing plugins.  Work on tooling to assist
	developers in localizing their JavaScript applications.
	[Client]
</li>
<li>
	<strong>Improved infrastructure for preferences</strong>
	Leverage the new settings page and layout to support additional preferences options for plugins.
	[Client, Server]
</li>
<li>
	<strong>Accessibility</strong>
	Finalize the sweep of accessibility testing and document how developers test accessibility
	[Client]
</li>
</ul>
</p:committed>

<p:deferred>
<ul>
<li>
	<strong>Improve Task Support</strong>
	Sequenced tasks and extending the existing support for login notification to have a wider range of capabilities.
	[Client]
</li>
<li>
	<strong>Improved specification for Plugin Model</strong>
	Plugin Model and Architecture for describing, identifying, discovering and installing.
	Support plugin catalogs via a feed as well as page redirection
	[Client]
</li>
<li>
	<strong>Generic Mechanism for Cross-Page Communication</strong>
	Support notification across pages in a generic way, and use the support for updating Git pages
	when files or the Git repository are modified on other pages.
	[Client]
</li>
</ul>
</p:deferred>

</p:theme>

<!-- ============================================== -->

<p:theme name="User Experience">
<p:description>
<p>In 0.4 there was signifiant work done to improve the look, feel and usibility of the UI.  In 0.5 this effort will
continue, focussing on cross site integration.  In addition, several items were carried over from 0.4. 
</p>
</p:description>

<p:proposed>
  <p><i>None at this time.</i></p>
</p:proposed>
<p:committed>
<ul>
<li>
	<strong>Improve workflow for accepting contributions from git repositories</strong>
	[Client]
</li>

<li>
	<strong>Fix landing page</strong>
	(deferred from 0.4)
	[Client]
</li>
<li>
	<strong>Unify look and feel of Git pages</strong>
	[Client]
</li>
<li>
	<strong>Improve file upload workflow</strong>

	Including single files and drag and drop
	[Client][Server]
</li>
<li>
	<strong>Searching improvements</strong>
	Advanced search (attributes, size, etc), phrase search and case insensitive file name search.
	[Client][Server]
</li>

</ul>
</p:committed>

<p:deferred>
<ul>
<li>
	<strong>Investigate Gerrit review flow</strong>
	[Client]
</li>
<li>
	<strong>Add support and UI for Git Stash, submodule support</strong>
	[Client][Server]
</li>
</ul>
</p:deferred>

</p:theme>

<p:theme name="Infrastructure">

<p:description>
<p>This theme includes currency with the existing 3rd party libraries used and providing existing and new core features that
  are modular.
</p>
</p:description>

<p:committed>
  <p><i>None at this time.</i></p>
</p:committed>
<p:proposed>
  <p><i>None at this time.</i></p>
</p:proposed>

<p:deferred>
<ul>
<li>
	<strong>Improve the test coverage and capabilities.</strong> Investigate JavaScript code coverage tools to see if there
	are ways to report on the completeness of the current testing.
	[Releng]
</li>
</ul>
</p:deferred>

</p:theme>

    
</p:themes_and_priorities>

<!-- ============================================== -->
</p:plan>
