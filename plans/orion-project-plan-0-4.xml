<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!--  Use this to test local rendering in firefox. Comment out this line once this plan is linked to portal data. -->
<?xml-stylesheet type="text/xsl" href="project-plan-render.xsl"?>
<!-- <?xml-stylesheet type="text/xsl" href="http://www.eclipse.org/projects/project-plan.xsl"?> -->

<p:plan
  plan-format="1.0"
  xmlns:p="http://www.eclipse.org/project/plan" xmlns="http://www.w3.org/1999/xhtml"
  name="Orion Project">

<p:release projectid="eclipse.orion" version="0.4"/>

<!-- ============================================== -->

<p:introduction>
<div>
<p>
Last revised 15:00 ET February 14, 2012.
</p>
<p><i>Please send comments about this plan to the</i> <a href="mailto:orion-dev@eclipse.org">orion-dev@eclipse.org</a> <i>developer
  mailing list.</i>
</p>
<p>This document lays out the feature and API set for the next feature release
  of the Orion project after 0.3, designated release 0.4. 
</p>

<p>Plans do not materialize out of nowhere, nor are they entirely static. To
  ensure the planning process is transparent and open to the entire Eclipse community,
  we (the Orion project leadership) post plans in an embryonic form and revise them
  throughout the release cycle. </p>
<p>The first part of the plan deals with the important matters of release deliverables,
  release milestones, target operating environments, and release-to-release compatibility.
  These are all things that need to be clear for any release, even if no features
  were to change. </p>
<p>The remainder of the plan consists of plan items for components of the Orion project.
  Each plan item covers a feature or API that is to be added to the Orion project deliverables, 
  or some aspect of the Orion project that is to be improved. Each plan item has its own entry
  in the Eclipse bugzilla database, with a title and a concise summary (usually
  a single paragraph) that explains the work item at a suitably high enough level
  so that everyone can readily understand what the work item is without having
  to understand the nitty-gritty detail. </p>
<p>Not all plan items represent the same amount of work; some may be quite large,
  others, quite small. Some plan items may involve work that is localized to
  a single component; others may involve coordinated changes to several components;
  other may pervade the entire project. Although some plan items are for work that
  is more pressing than others, the plan items appear in no particular order. </p>
<p>With the previous release as the starting point, this is the plan for how
  we will enhance and improve it. Fixing bugs, improving test coverage, documentation,
  examples, performance tuning, usability, etc. are considered routine ongoing
  maintenance activities and are not included in this plan unless they would
  also involve a significant change to the API or feature set, or involve a significant
  amount of work. The intent of the plan is to account for all interesting feature
  work. </p>
<p>The current status of each plan item is noted: </p>
<ul>
  <li><b>Committed</b> plan item - A committed plan item is one that we have
    decided to address for the release.</li>
  <li><b>Proposed</b> plan item - A proposed plan item is one that we are considering
    addressing for the release. Although we are actively investigating it, we
    are not yet in a position to commit to it, or to say that we won't be able
    to address it. After due consideration, a proposal will either be committed
    or deferred.</li>
  <li><b>Deferred</b> plan item - A reasonable proposal that will not make it
    in to this release for some reason is marked as deferred with a brief note
    as to why it was deferred. Deferred plan items may resurface as committed
    plan items at a later point.</li>
</ul>

</div>
</p:introduction>

<!-- ============================================== -->

<p:release_deliverables>
<div>

<p>The release deliverables have the same form as previous releases, namely: </p>
<ul>
  <li>Source code release for all Orion project deliverables, available as
    versions tagged &quot;R0_4&quot; in the Orion project <a href="http://wiki.eclipse.org/Orion/Getting_the_source">Git
    repositories</a>.</li>
  <li>Packaged Orion server download for Windows, Mac, and Linux</li>
  <li>Hosted Orion beta server on http://orionhub.org</li>
</ul>
</div>
</p:release_deliverables>

<!-- ============================================== -->

<p:release_milestones>

<p:preamble><p>      
  Release milestones will be occurring at roughly 6 week intervals, followed by a short
  end-game consisting of three release candidates.</p>
</p:preamble>
<p:milestone date="12/09/2011" milestone="M1"><div>0.4M1</div></p:milestone>
<p:milestone date="01/27/2012" milestone="M2"><div>0.4M2</div></p:milestone>
<p:milestone date="02/10/2012" milestone="RC1"><div>0.4RC1</div></p:milestone>
<p:milestone date="02/17/2012" milestone="RC2"><div>0.4RC2</div></p:milestone>
<p:milestone date="02/24/2012" milestone="RC3"><div>0.4RC3</div></p:milestone>
<p:postamble>
<div>
<p>A more detailed, milestone-level plan for the Orion project can be found 
  on the <a href="http://wiki.eclipse.org/Orion/Milestone_Plan">Orion Milestone Plan</a>
  wiki page.</p>
<p>Our target is to complete 0.4 in late February 2012, in advance of EclipseCon 2012.
  All release deliverables will be available for download as soon as the release has been
  tested and validated in the target operating configurations listed below.
 </p>
</div>
</p:postamble>

</p:release_milestones>

<!-- ============================================== -->

<p:target_environments>

<div>
<p>In order to remain current, each Orion project release targets reasonably current
  operating environments. We focus our testing on a handful of
  popular combinations of operating systems, Web browsers, and Java platforms; these are our <em>reference
  platforms</em>. Orion undoubtedly runs fine in many operating environments
  beyond the reference platforms we test. However, since we do not systematically test
  them we cannot vouch for them. Problems encountered when running Orion on a
  non-reference platform that cannot be recreated on any reference platform will
  be given lower priority than problems with running Orion on a reference platform.
 </p>
 <p>Orion has two broad classes of target environments:</p>
 <ol> 
 <li><b>Client target environments</b>  Indicates environments supported for
 end users of Orion-based web applications.
 </li>
 <li><b>Server target environments</b>  Indicates requirements for the platform
 where the Orion server is installed.
 </li>
 </ol>
<p>Most of the Orion client code is built on HTML5, CSS3, and ECMAScript 5 (JavaScript).
 As such, the chief dependence is on a web browser that supplies rendering and interpretation
 of these languages. In general, Orion requires the most recent major release of the
 major browsers it supports. Due to the fast pace of development in the browser world,
 supporting older browser versions is not a priority for Orion at this early stage of its development.
</p>
<p>Orion 0.4 is tested and validated on the following reference <i>client target environments</i>:</p>
<style type="text/css">
	table.platforms {
		border-width: 1px;
		border-spacing: 0px;
		border-style: solid;
		border-collapse: separate;
	}
	table.platforms th {
		border-width: 1px;
		padding: 3px;
		border-style: inset;
		border-color: black;
		background-color: #B9A9FF;
	}
	table.platforms td {
		border-width: 1px 1px 1px 1px;
		padding: 3px 3px 3px 3px;
		border-style: inset inset inset inset;
		border-color: gray gray gray gray;
	}
	table.platforms tr.c0 td {
		background-color: #FDFDFD;
	}
	table.platforms tr.c1 td {
		background-color: #F4EEFF;
	}
</style>
<center>
	<table class="platforms">
		<tr>
			<th>Operating System</th>
			<th>Version</th>
			<th>Browsers</th>
		</tr>
		<!-- ************ WINDOWS ************** -->
		<tr class="c0">
			<td rowspan="3">Windows</td>
			<td rowspan="3">7</td>
			<td rowspan="1">Chrome 15</td>
		</tr>
		<tr class = "c0">
			<td rowspan="1">Firefox 8.0</td>
		</tr>
		<tr class = "c0">
			<td rowspan="1">Internet Explorer 9.0</td>
		</tr>
		<!-- ************ RHEL ************** -->
		<tr class="c1">
			<td rowspan="2">Red Hat Enterprise Linux</td>
			<td rowspan="2">6</td>
			<td rowspan="1">Chrome 15</td>
		</tr>
		<tr class = "c1">
			<td rowspan="1">Firefox 8.0</td>
		</tr>
		<!-- ************ Mac ************** -->
		<tr class="c0">
			<td rowspan="1">Apple Mac OS X</td>
			<td rowspan="1">10.7.2</td>
			<td rowspan="1">Safari 5.1.1</td>
		</tr>
	</table>
 </center>
<p>Most of the Orion server code is &quot;pure&quot; Java code and has no direct dependence
  on the underlying operating system. The chief dependence is therefore on the
  Java Platform itself. Portions are targeted to specific classes of operating
  environments, requiring their source code to only reference facilities available
  in particular class libraries (e.g. Java SE 5, Java SE 6, etc). In general, the 0.4 
  release of the Orion server is developed and tested on Java SE 6.</p>
<p>The Orion 0.4 server is tested and validated on the following reference <i>server target environments</i>:</p>
<center>
	<table class="platforms">
		<tr>
			<th>Operating System</th>
			<th>Version</th>
			<th>Hardware</th>
			<th>JRE</th>
		</tr>
		<!-- ************ WINDOWS ************** -->
		<tr class="c0">
			<td rowspan="2">Windows</td>
			<td rowspan="2">7</td>
			<td rowspan="1">x86 32-bit</td>
			<td rowspan="2">Oracle Java 6 Update 29<br/>
				IBM Java 6 SR9 FP2
			</td>
		</tr>
		<tr class="c0">
			<td rowspan="1">x86 64-bit</td>
		</tr>
		<!-- ************ RHEL ************** -->
		<tr class="c1">
			<td rowspan="2">Red Hat Enterprise Linux</td>
			<td rowspan="2">6</td>
			<td rowspan="1">x86 32-bit</td>
			<td rowspan="2">Oracle Java 6 Update 29<br/>
				IBM Java 6 SR9 FP2
			</td>
		</tr>
		<tr class="c1">
			<td rowspan="1">x86 64-bit</td>
		</tr>
		<!-- ************ Mac ************** -->
		<tr class="c0">
			<td rowspan="1">Apple Mac OS X</td>
			<td rowspan="1">10.7</td>
			<td rowspan="1">Universal 64-bit</td>
			<td rowspan="1">Java for Mac OS X 10.7 Update 1</td>
		</tr>
	</table>
 </center>

<p>As stated above, <i>we expect that Orion works fine on other current
  Java VM and OS versions but we cannot flag these as reference platforms without
  significant community support for testing them.</i></p>
</div>

<p:internationalization>
<p>Orion cannot currently be used as the basis for internationalized products. One of the
  plan items for the 0.4 release is to investigate and begin implementation of an
  internationalization framefork for Orion.  The expectation is that in the 0.4 release,
  user interface elements, including dialogs and error messages, may not yet be externalized. 
  Only English strings are in plan to be provided.</p>
</p:internationalization>

</p:target_environments>
 
<!-- ============================================== -->

<p:compatibility_with_previous_releases>
<div>

<h3>Compatibility of Release 0.4 with 0.3</h3>
<p>Orion 0.4 offers no formal compatibility with Orion 0.3. While some plugins
designed for Orion 0.3 may continue to function when installed in Orion 0.4, there may
be changes to APIs and library functions used by the plugin that have changed in compatible
ways that prevent it from installing or operating properly.</p>
</div>
</p:compatibility_with_previous_releases>
  
<!-- ============================================== -->

<p:themes_and_priorities>

<p:preamble>
<div>
<p>The plan items listed below were defined according to contributor requirements and
community feedback. Each plan item covers a feature or API that is
  to be added to the Orion project deliverables, or some aspect of the Orion project that is
  to be improved. Each plan item has its own entry in the Eclipse bugzilla database, with a title
  and a concise summary (usually a single paragraph) that explains the work item at a suitably
  high enough level so that everyone can readily understand what the work item entails.</p>
<p>Not all plan items represent the same amount of work; some may be quite
  large, others, quite small. Although some plan items are for work that is 
  more pressing than others, the plan items appear in no particular order.
  See the corresponding bugzilla items for up-to-date status information on
  ongoing work and planned delivery milestones.</p>
<p>The current status of each plan item is noted:</p>
<ul>
  <li><b>Committed</b> plan item - A committed plan item is one that we have
    decided to address for the release. In bugzilla, this is reflected by
    having a concrete target milestone assigned.</li>
  <li><b>Proposed</b> plan item - A proposed plan item is one that we are
    considering addressing for the release. Although we are actively
    investigating it, we are not yet in a position to commit to it, or to say
    that we won't be able to address it. After due consideration, a proposal
    will either be committed or deferred. In bugzilla, such items are reflected
    by having a target milestone "0.3" or "---" assigned.</li>
  <li><b>Deferred</b> plan item - A reasonable proposal that will not make it in
    to this release for some reason is marked as deferred with a brief note as
    to why it was deferred. Deferred plan items may resurface as committed plan
    items at a later point. In bugzilla, such items are reflected by having
    a target milestone "---" assigned.</li>
</ul>
</div>
</p:preamble>

<!-- ============================================== -->

<p:theme name="Language Tooling">
<p:description>
<p>
 Orion 0.3 has sufficient tooling for the self-hosting JavaScript development work
 the team has been doing however to be more compatible with other usecases Orion
 needs to support additional languages and file types in the editor.  This theme is around
 improving the JavaScript support and language support in the editor.  A stretch goal is
 to provide the beginnings of a framework for a debug platform.
</p>
</p:description>

<p:committed>
<ul>
<li>
	<strong>CSSLint a regular part of Orion.</strong>
	This is awaiting the results of an Eclipse Foundation CQ.
	[Client]
</li>
<li>
	<strong>Validators for CSS, html, JavaScript.</strong>
	Improve validation of key languages, files.
	[Client]
</li>
<li>
	<strong>Initial Browser debug communication and injection to handle console commands from Orion.</strong>
	Create enough framework to communicate with the Chrome browser with the intent of providing a console
	experience within the Orion client.
	[Client]
</li>
<li>
	<strong>Investigate CodeMirror modes support for language highlighting within the editor.</strong>
	The CodeMirror modes has the potential to provide much of the language support in the editor that
	is required for Orion.
	[Client]
</li>
</ul>
</p:committed>

<p:proposed>
  <p><i>None at this time.</i></p>dsfdsf
</p:proposed>

<p:deferred>
<ul>
<li>
	<strong>Need a parser that can handle errors.</strong>
	The current parser cannot continue after encountering errors. This limits the flexibility on
	what can be done in the editor while the user is continually editing code.
	[Client]
</li>
</ul>
</p:deferred>

</p:theme>

<!-- ============================================== -->

<p:theme name="Platform">
<p:description>
<p>This theme includes currency with the existing 3rd party libraries used and providing existing and new core features that
  are modular.
</p>
</p:description>

<p:committed>
<ul>
<li>
	<strong>Update our 3rd party libraries including RequireJS and Jetty</strong>
	[Client]
</li>
<li>
	<strong>Examine use of require.js and module granularity</strong>
	Reduce the amount of cross contamination within modules so that they may be more easily consumed.
	[Client Editor]
</li>
<li>
	<strong>Long running tasks</strong>
	Investigate and implement a strategy to deal with multiple, long running tasks.
	[Client]
</li>
<li>
	<strong>Search and replace improvements</strong>
	Improve the capabilities and presentation of searching within the Orion Client.
	[Client Editor Server]
</li>
<li>
	<strong>User access to preferences</strong>
	Currently the page dedicated to plug-ins is presented at a very low level. A refreshed preferences page
	should present plug-ins and installation of these plug-ins using a component approach (adding File Services, 
	Language tooling, source code management, etc).
	[Client Server]
</li>
<li>
	<strong>Editor Improvements.</strong>
	Many improvements including performance, events, asynchronous initialization, platform integration.
	[Client Editor]
</li>
<li>
	<strong>Localization support</strong>
	Investigate the current approaches to Localization in JavaScript and adopt within the Orion framework.
	[Client]
</li>
</ul>

</p:committed>

<p:proposed>
  <p><i>None at this time.</i></p>
</p:proposed>

<p:deferred>
<ul>
<li>
	<strong>Update our 3rd party libraries including DoJo and JSDoc</strong>
	[Client]
</li>
<li>
	<strong>Closer alignment with OSGi services</strong>
	[Client]
</li>
<li>
	<strong>Authentication integration with service registry</strong>
	[Client]
</li>
</ul>
  <p><i>None at this time.</i></p>
</p:deferred>

</p:theme>

<!-- ============================================== -->

<p:theme name="User Experience">
<p:description>
<p>Through the increased self-hosting use of the Orion Platform it was found that many of the workflows were not optimal.
  The 0.4 release will focus on improving the user experience with regards to common tasks and try to minimize
  the number of clicks required to accomplish these tasks.
</p>
</p:description>

<p:committed>
<ul>
<li>
	<strong>Improve Mobile UI experience.</strong> Continue to push the consumability of Orion on mobile devices.
	[Client]
</li>
<li>
	<strong>Support patch workflow and improve branch management in Git.</strong>Overall, improve Git workflows.
	[Client Git]
</li>
<li>
	<strong>Identifying common tasks and providing better access to contextual movement.</strong>
	[Client]
</li>
<li>
	<strong>Semantic URLs with relevant contexual information for the task.</strong>
	[Client]
</li>
<li>
	<strong>Investigate approaches for deeper cross-site integration (delegated UI / bookmarklets).</strong>
	[Client]
</li>
</ul>
</p:committed>
<p:proposed>
  <p><i>None at this time.</i></p>
</p:proposed>

<p:deferred>
  <p><i>None at this time.</i></p>
</p:deferred>

</p:theme>

<p:theme name="Infrastructure">
<p:description>
<p>This theme includes currency with the existing 3rd party libraries used and providing existing and new core features that
  are modular.
</p>
</p:description>

<p:committed>
  <p><i>None at this time.</i></p>
</p:committed>
<p:proposed>
  <p><i>None at this time.</i></p>
</p:proposed>

<p:deferred>
<ul>
<li>
	<strong>Improve build capabilities to remove reliance on shell access.</strong> Current builds are relient on shell access
	and particular user access to Eclipse.org. This item is to allow Hudson style builds and promotions for the Orion team.
	[Releng]
</li>
<li>
	<strong>Improve the test coverage and capabilities.</strong> Investigate JavaScript code coverage tools to see if there
	are ways to report on the completeness of the current testing.
	[Releng]
</li>
</ul>
</p:deferred>

</p:theme>
    
</p:themes_and_priorities>

<!-- ============================================== -->
</p:plan>
